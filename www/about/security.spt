# coding: utf8

liberapay_hof_raw = """
EdOverflow
https://github.com/liberapay/liberapay.com/pull/467
"""

gratipay_hof_raw = """\
Sergey Bobrov https://twitter.com/Black2Fan
https://github.com/gratipay/security-flh0cu/issues/1

BALAJI P R https://www.linkedin.com/in/balagpy
https://github.com/gratipay/security-2a443f/issues/1

BALAJI P R https://www.linkedin.com/in/balagpy
https://github.com/gratipay/security-f4b75c/issues/1

benhc123
https://github.com/gratipay/gratipay.com/issues/2978

Drew Callahan https://www.linkedin.com/pub/drew-callahan/67/62/783
https://github.com/gratipay/security-00001/issues/1

Nitin Goplani http://in.linkedin.com/in/nitingoplani
https://github.com/gratipay/gratipay.com/issues/2235

danishtariq
https://github.com/gratipay/gratipay.com/issues/1536

kudu adamziaja http://adamziaja.com
https://github.com/gratipay/gratipay.com/issues/1460

@Brkay_Aydin
https://twitter.com/Brkay_Aydin/status/377611459942817792

greggles
https://github.com/gratipay/gratipay.com/commit/addbbda0eab0efa2d45272c99e689f7

@kamilsevi
https://github.com/gratipay/gratipay.com/issues/1042

dstufft
https://twitter.com/dstufft/status/319607503061131266

wilkie buttscicles
https://github.com/gratipay/gratipay.com/issues/722

d0ugal jacobian spookylukey
https://github.com/gratipay/gratipay.com/issues/88
"""

parse_twitter = lambda x: [(x, 'https://twitter.com/' + x[1:])]
parse_github = lambda x: [(y, 'https://github.com/' + y) for y in x.split()]
parse_link = lambda x: [x.rsplit(None, 1)]
new_rec = lambda: [[], None]

def parse_hof(raw):
    hof = [new_rec()]
    for line in raw.strip().splitlines():
        if not line:
            hof.append(new_rec())
        elif line.startswith('http'):
            hof[-1][1] = line
        elif line.startswith('@'):
            hof[-1][0] = parse_twitter(line)
        elif ' http' in line:
            hof[-1][0] = parse_link(line)
        else:
            hof[-1][0] = parse_github(line)
    return hof

gratipay_hof = parse_hof(gratipay_hof_raw)
liberapay_hof = parse_hof(liberapay_hof_raw)

[---]
title = _("Security")
[---] text/html
% extends "templates/about.html"
% block content

    <p>If you have found a security issue, and it's not <a href="https://github.com/liberapay/liberapay.com/issues?q=is%3Aissue+is%3Aopen+label%3ASelf-defense">already known</a>, then please send a report to <a onclick="$(this).html('admin&amp;#64;liberapay.com')">[click to see email address]</a>.</p>

    <p>We will investigate legitimate reports and make every effort to quickly resolve any vulnerability. To encourage responsible reporting, we will not take legal action against you nor ask law enforcement to investigate you providing you comply with the following guideline:</p>

    <ul>
        <li>Make a good faith effort to avoid privacy violations, destruction of data, and interruption or degradation of our services.</li>
    </ul>

    <h3>Exclusions</h3>

    <p>The following <b>test types</b> are excluded from the scope:</p>

    <ul>
        <li>Findings from physical testing such as office access (e.g. open doors, tailgating).</li>

        <li>Findings derived primarily from social engineering (e.g. phishing, vishing).</li>

        <li>Reports that state that software is out of date or vulnerable without a proof of concept.</li>

        <li>Highly speculative reports about theoretical damage. Be concrete.</li>

        <li>Vulnerabilities as reported by automated tools without additional analysis as to how they are an issue.</li>

        <li>Issues in third-party services should be reported to the respective team.</li>
    </ul>

    <p>The following <b>issue types</b> are excluded from scope:</p> 

    <ul>
       <li><strong>Network-level Denial of Service (DoS/DDoS) vulnerabilities.</strong> We do not want you to disrupt any of our services.</li>
       <li><strong>Low severity issues that can be detected with tools such as Hardenize and Security Headers.</strong> We run regular scans with these services and try to improve our score gradually.</li>
       <li><strong>Content injection issues.</strong> The severity of this issue is so low that it does not warrant a report.</li>
       <li><strong>Cross-site Request Forgery (CSRF) with minimal security implications (Logout CSRF, etc.).</strong> In order for CSRF to be a valid issue it must affect some important action such as deleting oneâ€™s account.</li>
       <li><strong>Missing cookie flags on non-security-sensitive cookies.</strong> These type of issues do not present a major risk and are usually picked up by scanners.</li>
       <li><strong>UI and UX bugs (including spelling mistakes).</strong></li>
       <li><strong>401 injection.</strong> This is usually an accepted risk.</li>
       <li><strong>Stack traces that disclose information.</strong> Most of our projects are open-source therefore this information is usually public knowledge. That said, if you discover a stack trace that discloses information which is not located in our GitHub repositories, please do submit a report.</li>
       <li><strong>Host header issues without an accompanying proof-of-concept demonstrating vulnerability.</strong></li>
       <li><strong>Open ports without an accompanying proof-of-concept demonstrating vulnerability.</strong></li>
       <li><strong>Banner grabbing issues (figuring out what web server we use, etc.).</strong> We will happily share what web servers we are running.</li>
       <li><strong>Missing X-Frame-Options header (Clickjacking).</strong> The lack of X-Frame-Options does not always indicate that a security vulnerability is present. This is an optional header that is only necessary on endpoints where there UI is rendered to invoke state changing actions. We recommend reading this informative post by David Ross: <a href="https://plus.google.com/u/0/+DavidRossX/posts/jVrtTRd5yKP">https://plus.google.com/u/0/+DavidRossX/posts/jVrtTRd5yKP</a></li>
    </ul>

    <p>We encourage hackers to read <a href="https://leanpub.com/web-hacking-101">Web Hacking 101</a> and <a href="https://leanpub.com/ltr101-breaking-into-infosec">Breaking into Information Security: Learning the Ropes 101</a> to get a good idea of the type of issues that we are looking for.</p>

    <h3>Hall of Fame</h3>

    % macro show_hof(hof)
    <ol>
        % for researchers, link in hof
        <li>
        % for handle, href in researchers
            <a href="{{ href }}">{{ handle }}</a>{% if not loop.last %}{% if loop.revindex0 == 1 %} &amp; {% else %}, {% endif %}{% endif %}
        % endfor
        &mdash; <a href="{{ link }}">{{ link }}</a>
        </li>
        % endfor
    </ol>
    % endmacro

    <p>Thanks to the following researchers (most recent first) for having
    reported security issues to us via email:</p>

    {{ show_hof(liberapay_hof) }}

    <p>Thanks to all hackers who have disclosed security issues to Gratipay
    <a href="https://hackerone.com/gratipay">on Hackerone</a>, some of which
    also applied to Liberapay.</p>

    <p>Thanks to the following people (most recent first) for having alerted
    Gratipay about security issues through other means:</p>

    {{ show_hof(gratipay_hof) }}

% endblock

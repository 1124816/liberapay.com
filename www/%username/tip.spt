"""Get or change the authenticated user's tip to this person.
"""
from base64 import b64encode

from liberapay.exceptions import AuthRequired
from liberapay.utils import b64encode_s, get_participant

[-----------------------------------------------------------------------------]

if user.ANON:
    raise AuthRequired

out = {}

# Get tipper and tippee.
# ======================

tipper = user
tippee = get_participant(state, restrict=False, redirect_stub=False)

tippee_name = tippee.username
if tippee.status == 'stub':
    tippee_name = list(tippee.get_accounts_elsewhere().values())[0].user_name


# Get and maybe set amount.
# =========================

if request.method == 'POST':
    period = request.body.get('period', 'weekly')
    if period not in constants.PERIOD_CONVERSION_RATES:
        raise Response(400, "bad 'period' value '%s'" % period)
    out = tipper.set_tip_to(tippee, parse_decimal(request.body['amount']), period)
    if out['amount'] == 0:
        out["msg"] = _("Your weekly donation to {0} has been stopped.", tippee_name)
    else:
        out["msg"] = _("You are now donating {0} per week to {1}. Thank you!",
                       Money(out['amount'], 'EUR'), tippee_name)
    if request.headers.get(b'X-Requested-With') != b'XMLHttpRequest':
        back_to = request.body.get('back_to') or tipper.path('giving/')
        back_to += '&' if '?' in back_to else '?'
        back_to += 'success=' + b64encode_s(out["msg"])
        if out['amount'] and not out['is_funded'] and not out['is_pledge']:
            response.redirect('/' + tipper.username + '/wallet/payin/' + b64encode_s(back_to))
        response.redirect(back_to)
else:
    out = tipper.get_tip_to(tippee)

amount = out['amount']
total_giving = tipper.giving
total_receiving = tipper.receiving

out["amount"] = str(amount)
out["npatrons"] = tippee.npatrons
out["tippee_id"] = tippee.id
out["total_giving"] = str(total_giving)
out["total_receiving"] = str(total_receiving)

if not tippee.hide_receiving:
    total_receiving_tippee = tippee.receiving
    out["total_receiving_tippee"] = str(total_receiving_tippee)
else:
    out["total_receiving_tippee"] = None

if 'ctime' in out:
    out["ctime"] = str(out['ctime'])
    out["mtime"] = str(out['mtime'])
else:
    out["ctime"] = out["mtime"] = None

[---] text/html

[---] application/json via json_dump
out

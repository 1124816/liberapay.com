from aspen import Response
from babel.numbers import NumberFormatError

from liberapay.utils import get_participant

[---]

request.allow("POST")
participant = get_participant(state, restrict=True)

goal = request.body["goal"]

if goal == "null":
    goal = None
elif goal == "custom":
    goal = request.body["goal_custom"]

if goal is not None:
    try:
        goal = parse_decimal(goal)
    except NumberFormatError:
        raise Response(400, _("That's not a valid number"))

if goal == -1 and not request.body.get("confirmed"):
    msg = _("Warning: Doing this will remove all the tips you are currently receiving."
            "\n\nThat cannot be undone!")
else:
    participant.update_goal(goal)
    response.redirect('./edit')

[---] text/html
{% extends "templates/base.html" %}
{% block content %}
    <form action="" method="POST">
        <input type="hidden" name="csrf_token" value="{{ csrf_token }}" />
        <input type="hidden" name="goal" value="{{ goal }}" />
        <input type="hidden" name="confirmed" value="true" />
        <div class="alert alert-danger">{{ msg }}</div>
        <a class="btn btn-default" href="./edit">{{ _("Cancel") }}</a>
        <button class="btn btn-danger">{{ _("Confirm") }}</button>
    </form>
{% endblock %}

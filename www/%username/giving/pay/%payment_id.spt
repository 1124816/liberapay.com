# coding: utf8

from math import ceil

from liberapay.models.participant import Participant
from liberapay.utils import get_participant, group_by, NS, partition

ONE_YEAR = {
    'weekly': 52,
    'monthly': 12,
    'yearly': 1,
}

PAYMENT_PROVIDERS = website.db.one(
    "SELECT array_to_json(enum_range(NULL::payment_providers))"
)

[---]

payer = get_participant(state, restrict=True)

if request.method == 'POST':
    # For backward compatibility
    response.redirect(payer.path('giving/pay/stripe/'), code=307)

payin_id = request.path['payment_id']

if payin_id == 'complete':
    # For backward compatibility
    payin = website.db.one("""
        SELECT pi.*
          FROM payin pi
          JOIN exchange_routes r ON r.id = pi.route
         WHERE pi.participant = %s
           AND r.network = 'stripe'
           AND r.address = %s
      ORDER BY pi.ctime DESC
         LIMIT 1
    """, (payer.id, request.qs['source']))
    if not payin:
        raise response.error(400, "payin not found")
    response.redirect(payer.path('giving/pay/stripe/%i' % payin.id))

elif payin_id:
    # For backward compatibility
    if not payin_id.isdigit():
        raise response.error(404, "invalid payin ID in URL path")
    payin = website.db.one("""
        SELECT *
          FROM payins
         WHERE id = %s
           AND payer = %s
    """, (payin_id, payer.id))
    if not payin:
        raise response.error(404, "unknown payin ID in URL path")
    response.redirect(payer.path('giving/pay/stripe/%i' % payin.id))

tippee_id = request.qs.get_int('beneficiary', default=None)
donations = payer.get_tips_awaiting_renewal()
donations, donations_not_fundable = partition(
    donations, lambda t: t.tippee_p.payment_providers > 0 and not t.tippee_p.is_suspended
)
if tippee_id:
    donations, other_donations = partition(
        donations, lambda t: t.tippee == tippee_id
    )

if donations:
    tip = donations[0]
    providers = [
        name for bit, name in enumerate(PAYMENT_PROVIDERS, 1)
        if tip.tippee_p.payment_providers & bit > 0
    ]
    if providers == ['paypal']:
        response.redirect(payer.path('giving/pay/paypal?beneficiary=%i&chosen=false' % tip.tippee))

if user == payer:
    payer.mark_notifications_as_read('donate_reminder')

title = _("Funding your donations")

[---] text/html
% extends "templates/base-thin.html"

% block thin_content

% if donations

    % if len(donations) > 1
        <p>{{ ngettext(
            "You have {n} donation awaiting payment.",
            "You have {n} donations awaiting payment.",
            n=len(donations)
        ) }}</p>
        <p class="alert alert-warning">{{ _(
            "Funding multiple donations with a single payment is currently not possible, "
            "so you will have to renew your donations one by one. We apologize for the "
            "inconvenience."
        ) }}</p>
        <hr>
    % endif

    <p>{{ _("Please choose a payment method:") }}</p>

    <div class="row payment-methods">
    % from "templates/icons.html" import fontawesome, glyphicon

    % for provider in providers
        % if provider == 'stripe'
        <div class="col-sm-6">
            <div class="panel panel-default">
            <div class="panel-body overlayed">
                <p class="payment-icon">{{ fontawesome('credit-card-alt') }}</p>
                <h4>{{ _("Card") }}<br>
                    <small>Visa, MasterCard, American Express</small>
                </h4>
                <a class="overlay" href="{{ payer.path('giving/pay/stripe/') }}?beneficiary={{ tip.tippee }}&amp;method=card"></a>
            </div></div>
        </div>
        % set possible = tip.amount.currency == 'EUR'
        % set warn = request.country not in constants.SEPA
        <div class="col-sm-6">
            <div class="panel panel-default">
            <div class="panel-body overlayed {{ '' if possible else 'not-recommended' }}">
                <p class="payment-icon">{{ fontawesome('bank') }}</p>
                <h4>{{ _("Direct Debit") }}<br>
                    % if not possible
                    <small>{{ _("Euro donations only") }}</small>
                    % else
                    <small class="{{ 'text-warning' if warn else '' }}">{{ _("Euro bank accounts only") }}</small>
                    % endif
                </h4>
                % if possible
                <a class="overlay" href="{{ payer.path('giving/pay/stripe/') }}?beneficiary={{ tip.tippee }}&amp;method=sdd"></a>
                % endif
            </div></div>
        </div>
        % elif provider == 'paypal'
        <div class="col-sm-6">
            <div class="panel panel-default">
            <div class="panel-body overlayed">
                <p class="payment-icon">{{ fontawesome('paypal') }}</p>
                <h4>PayPal<br>
                    <small class="text-warning">{{ _("Not anonymous") }}</small>
                </h4>
                <a class="overlay" href="{{ payer.path('giving/pay/paypal/') }}?beneficiary={{ tip.tippee }}"></a>
            </div>
            </div>
        </div>
        % endif
    % endfor
    </div>

% else

    % if donations_not_fundable
        % if donations
            <hr>
        % endif
        % for tip in donations_not_fundable
        <p>{{ _(
            "Your donation to {recipient} cannot be processed right now because the "
            "account of the beneficiary isn't ready to receive money.",
            recipient=tip.tippee_p.link()
        ) }}</p>
        % endfor
    % else
        <div class="alert alert-success">{{ _("All your donations are funded.") }}</div>
        <a class="btn btn-default" href="{{ payer.path('giving/') }}">{{ _("Manage your donations") }}</a>
    % endif

% endif

% endblock

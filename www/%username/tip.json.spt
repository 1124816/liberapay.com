"""Get or change the authenticated user's tip to this person.
"""
from decimal import InvalidOperation

from aspen import Response
from babel.numbers import NumberFormatError
from liberapay.models.participant import Participant
from liberapay.utils import get_participant

[-----------------------------------------------------------------------------]

if user.ANON:
    raise Response(403, _("Please sign in first"))

else:
    out = {}

    # Get tipper and tippee.
    # ======================

    tipper = user
    tippee = get_participant(state, restrict=False, redirect_stub=False)


    # Get and maybe set amount.
    # =========================

    if request.method == 'POST':
        try:
            out = tipper.set_tip_to(tippee, parse_decimal(request.body['amount']))
        except (InvalidOperation, ValueError, NumberFormatError):
            raise Response(400, "bad amount")
        if request.headers.get('X-Requested-With') != 'XMLHttpRequest':
            request.redirect(request.body.get('back_to') or '..')
    else:
        out = tipper.get_tip_to(tippee)

    amount = out['amount']
    total_giving = tipper.giving
    total_receiving = tipper.receiving

    out["amount"] = str(amount)
    out["amount_l"] = format_currency(amount, 'USD')
    if tippee.username == 'Liberapay':
        out["msg"] = _("Thank you so much for supporting Liberapay! :D")
    else:
        out["msg"] = _("Tip changed to {0} per week!", out["amount_l"])
    out["npatrons"] = tippee.npatrons
    out["tippee_id"] = tippee.id
    out["total_giving"] = str(total_giving)
    out["total_giving_l"] = format_currency(total_giving, 'USD')
    out["total_receiving"] = str(total_receiving)
    out["total_receiving_l"] = format_currency(total_receiving, 'USD')

    if not tippee.hide_receiving:
        total_receiving_tippee = tippee.receiving
        out["total_receiving_tippee"] = str(total_receiving_tippee)
        out["total_receiving_tippee_l"] = format_currency(total_receiving_tippee, 'USD')
    else:
        out["total_receiving_tippee"] = None
        out["total_receiving_tippee_l"] = '[' + _("hidden") + ']'

    if 'ctime' in out:
        out["ctime"] = str(out['ctime'])
        out["mtime"] = str(out['mtime'])
    else:
        out["ctime"] = out["mtime"] = None


[---] application/json via json_dump
out

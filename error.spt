from __future__ import absolute_import, division, print_function, unicode_literals

from aspen.http import status_strings

from liberapay.exceptions import LazyResponse
from liberapay.utils.i18n import HTTP_ERRORS

[----------------------------------------]

code = response.code
msg = _(HTTP_ERRORS.get(code, status_strings.get(code, '')))
try:
    assert msg
except Exception as e:
    website.tell_sentry(e, state)

if isinstance(response, LazyResponse):
    response.render_body(state)
err = response.body
if code == 500 and not err:
    err = _("Looks like you've found a bug! Sorry for the inconvenience, we'll get it fixed ASAP!")

[----------------------------------------] text/html
% extends "templates/base.html"
% set title = '' if response.show_sign_in_form else code
% block content
    % if response.show_sign_in_form
        % include "templates/sign-in-form.html"
    % else
        <p>{{ msg }}</p>
        <pre>{{ err }}</pre>
    % endif
% endblock
[----------------------------------------] application/json via json_dump
{ "error_code": code
, "error_message_short": msg
, "error_message_long": err
 }
[----------------------------------------] text/plain
{{msg}}, program!
{{err}}
